:javascript  
  $.get("#{dictionaries_path(:format => :json)}", function(data) {
    var words = [];                
    for( var i=0; i<data.length; i++){
      words.push(data[i].word);                    
    }    
    autocompleteTextarea(words);    
  });
  
  $(function(){
    $(".chzn-select").chosen();
    $(".chzn-select-deselect").chosen({allow_single_deselect:true});   
  });
  
  
%a{:name => "top"}
-#=link_to 'История изменений', versions_protocol_path(@protocol) if @protocol.versions.where("object not null") != []
= form_for @protocol, :class => "form-inline edit-form" do |f|
  =render "errors/error", :obj => @protocol
  =hidden_field_tag "ajax_url", @protocol_path 
  .field
    = f.label :date
    %br    
    = f.text_field :date, :id => "datepicker", :readonly => true
  .field  
    = f.label :number        
    %br    
    = f.text_field :number
  .field  
    = f.label :chairman_token
    %br
    = f.text_field :chairman_token, "data-pre"=>@protocol.chairman ? [@protocol.chairman].map(&:attributes).to_json : nil
  .field
    = f.label :secretary_token
    %br
    = f.text_field :secretary_token, "data-pre"=>@protocol.secretary ? [@protocol.secretary].map(&:attributes).to_json : nil
  .field
    = f.label :auditory_id
    %br
    = f.text_field :auditory_token, "data-pre"=>@protocol.auditory ? [@protocol.auditory].map(&:attributes).to_json : nil  
  .field  
    = f.label :employee_tokens
    %br    
    %ul
      %li
        Выбрать/убрать всех
        =check_box_tag "select_all", :id => "select_all"
      -if @protocol_is_new.blank?
        -Employee.find_each do |e|
          -id = e.id
          %li
            =f.check_box :employee_protocol_ids, {:multiple => true, :checked => f.object.employee?(id), :class => "people"}, id, nil
            =e.long_fio
      -else
        -Employee.find_each do |e|
          -id = e.id
          %li
            =f.check_box :employee_protocol_ids, {:multiple => true, :checked => true, :class => "people"}, id, nil
            =e.long_fio    
    = f.label :invited
    = f.text_area :invited
    %hr
    %a{:name => "themes_list"}    
    %h2 Повестка дня
    Подгрузить тему из других протоколов:
    %br    
    
    =select_tag :select_theme, load_themes, :class => "chzn-select",
    :'data-placeholder' => "Select theme"    

    #loaded_theme
      =render "themes/theme"    
    
    -@protocol.themes.each_with_index do |theme, i|
      =link_to "#{(i+1)}) #{theme.description}", :anchor => theme.id
      %br

    .protocol_themes
      %p
        -i=0
        = f.fields_for :themes do |builder|                               
          =render "theme", :f => builder
        %br
      %p
        = link_to_add_fields icon_add, f, :themes
      #add_themes
      %br
    %hr                
  #panel
    = f.submit 'Сохранить', :class => "btn"
    %br
    %br
    = link_to 'Вверх',"#top", :class => "btn btn-success"       
    = link_to 'Вниз', "#bottom", :class => "btn btn-success"
    = link_to 'Назад', protocols_path, :class => "btn btn-success"
    %br    

